{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MarketInstruction",
  "oneOf": [
    {
      "type": "string",
      "enum": [
        "SettleFunds",
        "DisableMarket",
        "SweepFees",
        "CloseOpenOrders",
        "InitOpenOrders"
      ]
    },
    {
      "description": "0. `[writable]` the market to initialize 1. `[writable]` zeroed out request queue 2. `[writable]` zeroed out event queue 3. `[writable]` zeroed out bids 4. `[writable]` zeroed out asks 5. `[writable]` spl-token account for the coin currency 6. `[writable]` spl-token account for the price currency 7. `[]` coin currency Mint 8. `[]` price currency Mint 9. `[]` the rent sysvar 10. `[]` open orders market authority (optional) 11. `[]` prune authority (optional, requires open orders market authority) 12. `[]` crank authority (optional, requires prune authority)",
      "type": "object",
      "required": [
        "InitializeMarket"
      ],
      "properties": {
        "InitializeMarket": {
          "$ref": "#/definitions/InitializeMarketInstruction"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` the market 1. `[writable]` the OpenOrders account to use 2. `[writable]` the request queue 3. `[writable]` the (coin or price currency) account paying for the order 4. `[signer]` owner of the OpenOrders account 5. `[writable]` coin vault 6. `[writable]` pc vault 7. `[]` spl token program 8. `[]` the rent sysvar 9. `[writable]` (optional) the (M)SRM account used for fee discounts",
      "type": "object",
      "required": [
        "NewOrder"
      ],
      "properties": {
        "NewOrder": {
          "$ref": "#/definitions/NewOrderInstructionV1"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` market 1. `[writable]` req_q 2. `[writable]` event_q 3. `[writable]` bids 4. `[writable]` asks 5. `[writable]` coin fee receivable account 6. `[writable]` pc fee receivable account",
      "type": "object",
      "required": [
        "MatchOrders"
      ],
      "properties": {
        "MatchOrders": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    {
      "description": "... `[writable]` OpenOrders accounts.len() - 4 `[writable]` market accounts.len() - 3 `[writable]` event queue accounts.len() - 2 `[writable]` coin fee receivable account accounts.len() - 1 `[writable]` pc fee receivable account",
      "type": "object",
      "required": [
        "ConsumeEvents"
      ],
      "properties": {
        "ConsumeEvents": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[]` market 1. `[writable]` OpenOrders 2. `[writable]` the request queue 3. `[signer]` the OpenOrders owner",
      "type": "object",
      "required": [
        "CancelOrder"
      ],
      "properties": {
        "CancelOrder": {
          "$ref": "#/definitions/CancelOrderInstruction"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[]` market 1. `[writable]` OpenOrders 2. `[writable]` the request queue 3. `[signer]` the OpenOrders owner",
      "type": "object",
      "required": [
        "CancelOrderByClientId"
      ],
      "properties": {
        "CancelOrderByClientId": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` the market 1. `[writable]` the OpenOrders account to use 2. `[writable]` the request queue 3. `[writable]` the (coin or price currency) account paying for the order 4. `[signer]` owner of the OpenOrders account 5. `[writable]` coin vault 6. `[writable]` pc vault 7. `[]` spl token program 8. `[]` the rent sysvar 9. `[writable]` (optional) the (M)SRM account used for fee discounts",
      "type": "object",
      "required": [
        "NewOrderV2"
      ],
      "properties": {
        "NewOrderV2": {
          "$ref": "#/definitions/NewOrderInstructionV2"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` the market 1. `[writable]` the OpenOrders account to use 2. `[writable]` the request queue 3. `[writable]` the event queue 4. `[writable]` bids 5. `[writable]` asks 6. `[writable]` the (coin or price currency) account paying for the order 7. `[signer]` owner of the OpenOrders account 8. `[writable]` coin vault 9. `[writable]` pc vault 10. `[]` spl token program 11. `[]` the rent sysvar 12. `[writable]` (optional) the (M)SRM account used for fee discounts",
      "type": "object",
      "required": [
        "NewOrderV3"
      ],
      "properties": {
        "NewOrderV3": {
          "$ref": "#/definitions/NewOrderInstructionV3"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` market 1. `[writable]` bids 2. `[writable]` asks 3. `[writable]` OpenOrders 4. `[signer]` the OpenOrders owner 5. `[writable]` event_q",
      "type": "object",
      "required": [
        "CancelOrderV2"
      ],
      "properties": {
        "CancelOrderV2": {
          "$ref": "#/definitions/CancelOrderInstructionV2"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` market 1. `[writable]` bids 2. `[writable]` asks 3. `[writable]` OpenOrders 4. `[signer]` the OpenOrders owner 5. `[writable]` event_q",
      "type": "object",
      "required": [
        "CancelOrderByClientIdV2"
      ],
      "properties": {
        "CancelOrderByClientIdV2": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    {
      "description": "0. `[writable]` market 1. `[writable]` bids 2. `[writable]` asks 3. `[writable]` OpenOrders 4. `[]`",
      "type": "object",
      "required": [
        "SendTake"
      ],
      "properties": {
        "SendTake": {
          "$ref": "#/definitions/SendTakeInstruction"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Removes all orders for a given open orders account from the orderbook.\n\n0. `[writable]` market 1. `[writable]` bids 2. `[writable]` asks 3. `[signer]` prune authority 4. `[]` open orders. 5. `[]` open orders owner. 6. `[writable]` event queue.",
      "type": "object",
      "required": [
        "Prune"
      ],
      "properties": {
        "Prune": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    {
      "description": "... `[writable]` OpenOrders accounts.len() - 3 `[writable]` market accounts.len() - 2 `[writable]` event queue accounts.len() - 1 `[signer]` crank authority",
      "type": "object",
      "required": [
        "ConsumeEventsPermissioned"
      ],
      "properties": {
        "ConsumeEventsPermissioned": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "CancelOrderInstruction": {
      "type": "object",
      "required": [
        "order_id",
        "owner",
        "owner_slot",
        "side"
      ],
      "properties": {
        "order_id": {
          "type": "integer",
          "format": "uint128",
          "minimum": 0.0
        },
        "owner": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "maxItems": 4,
          "minItems": 4
        },
        "owner_slot": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "side": {
          "$ref": "#/definitions/Side"
        }
      }
    },
    "CancelOrderInstructionV2": {
      "type": "object",
      "required": [
        "order_id",
        "side"
      ],
      "properties": {
        "order_id": {
          "type": "integer",
          "format": "uint128",
          "minimum": 0.0
        },
        "side": {
          "$ref": "#/definitions/Side"
        }
      }
    },
    "InitializeMarketInstruction": {
      "type": "object",
      "required": [
        "coin_lot_size",
        "fee_rate_bps",
        "pc_dust_threshold",
        "pc_lot_size",
        "vault_signer_nonce"
      ],
      "properties": {
        "coin_lot_size": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "fee_rate_bps": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "pc_dust_threshold": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "pc_lot_size": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "vault_signer_nonce": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "NewOrderInstructionV1": {
      "type": "object",
      "required": [
        "client_id",
        "limit_price",
        "max_qty",
        "order_type",
        "side"
      ],
      "properties": {
        "client_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "limit_price": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "max_qty": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "order_type": {
          "$ref": "#/definitions/OrderType"
        },
        "side": {
          "$ref": "#/definitions/Side"
        }
      }
    },
    "NewOrderInstructionV2": {
      "type": "object",
      "required": [
        "client_id",
        "limit_price",
        "max_qty",
        "order_type",
        "self_trade_behavior",
        "side"
      ],
      "properties": {
        "client_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "limit_price": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "max_qty": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "order_type": {
          "$ref": "#/definitions/OrderType"
        },
        "self_trade_behavior": {
          "$ref": "#/definitions/SelfTradeBehavior"
        },
        "side": {
          "$ref": "#/definitions/Side"
        }
      }
    },
    "NewOrderInstructionV3": {
      "type": "object",
      "required": [
        "client_order_id",
        "limit",
        "limit_price",
        "max_coin_qty",
        "max_native_pc_qty_including_fees",
        "order_type",
        "self_trade_behavior",
        "side"
      ],
      "properties": {
        "client_order_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "limit": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "limit_price": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "max_coin_qty": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "max_native_pc_qty_including_fees": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "order_type": {
          "$ref": "#/definitions/OrderType"
        },
        "self_trade_behavior": {
          "$ref": "#/definitions/SelfTradeBehavior"
        },
        "side": {
          "$ref": "#/definitions/Side"
        }
      }
    },
    "OrderType": {
      "type": "string",
      "enum": [
        "Limit",
        "ImmediateOrCancel",
        "PostOnly"
      ]
    },
    "SelfTradeBehavior": {
      "type": "string",
      "enum": [
        "DecrementTake",
        "CancelProvide",
        "AbortTransaction"
      ]
    },
    "SendTakeInstruction": {
      "type": "object",
      "required": [
        "limit",
        "limit_price",
        "max_coin_qty",
        "max_native_pc_qty_including_fees",
        "min_coin_qty",
        "min_native_pc_qty",
        "side"
      ],
      "properties": {
        "limit": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "limit_price": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "max_coin_qty": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "max_native_pc_qty_including_fees": {
          "type": "integer",
          "format": "uint64",
          "minimum": 1.0
        },
        "min_coin_qty": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "min_native_pc_qty": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "side": {
          "$ref": "#/definitions/Side"
        }
      }
    },
    "Side": {
      "type": "string",
      "enum": [
        "Bid",
        "Ask"
      ]
    }
  }
}